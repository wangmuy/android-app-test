apply plugin: 'java'

dependencies {
    compile fileTree(dir: 'libs', include:'*.jar')
    compile fileTree(dir: SDKHOME + '/platforms/' + SDKTARGET, include:  '*.jar')
    compile group: 'junit', name: 'junit', version: '4.11'
}

sourceSets {
    main {
        java { srcDir 'src/main/java' }
    }
}

// https://github.com/FkinH/uiautomator-gradle

project.ext {
    // output dex file dir
    outDir = 'build/bin'
    outFile = new File(outDir+'/'+project.name+'.jar')
}

jar {
    doLast {
        new File(project.outDir).mkdir()
        tasks.dex.execute()
    }
}

task dex(dependsOn: jar, type:Exec) {
    println 'Building dex...'
    workingDir '.'
    commandLine SDKHOME + '/' + SDKBUILDTOOLSDIR + '/' + 'dx.bat', '--dex', '--no-strict', '--multi-dex', '--output=' + project.outFile.absolutePath, jar.archivePath
}


// https://newfivefour.com/android-uiautomator-gradle.html

task uiaInstall(dependsOn: ['build']) doLast {
    Process proc = ["adb", "push", project.outFile.absolutePath, "/data/local/tmp"].execute()
    proc.consumeProcessErrorStream(System.err)
    proc.consumeProcessOutputStream(System.out)
    if (proc.waitFor() != 0) {
        throw new RuntimeException('push failed')
    }
}

task uiaRun(dependsOn: ['uiaInstall']) doLast {
    Process proc = ["adb", "shell", "uiautomator", "runtest", project.outFile.name].execute()
    proc.consumeProcessErrorStream(System.err)
    proc.consumeProcessOutputStream(System.out)
    if (proc.waitFor() != 0) {
        throw new RuntimeException('exec failed')
    }
}
